name: Auto Update Code with Gemini

on:
  schedule:
    - cron: '0 * * * *'  # Запуск каждый час
  push:
    branches:
      - main

jobs:
  update_code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt not found!" && exit 1
          fi

      - name: Verify installed dependencies
        run: pip list

      - name: Check if src/main.py exists
        run: |
          if [ ! -f src/main.py ]; then
            echo "Error: src/main.py not found!" && exit 1
          fi

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)/src" >> $GITHUB_ENV

      - name: Run analysis and update code
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          # Обработка ошибок при выполнении src/main.py
          python src/main.py || (echo "Error running src/main.py" && exit 1)

      - name: Generate commit message using Gemini
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          # Генерация сообщения для коммита
          COMMIT_MESSAGE=$(python src/commit_message.py || echo "Automated update using Gemini")
          echo "Generated commit message: $COMMIT_MESSAGE"
          echo "$COMMIT_MESSAGE" > commit_message.txt

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Настройка git
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add src/model_training.py report.md || echo "No changes to add"
          
          # Проверка наличия изменений и коммит
          if [ -s commit_message.txt ]; then
            git commit -F commit_message.txt || echo "No changes to commit"
          else
            echo "No commit message generated, skipping commit."
          fi
          
          # Пуш изменений в репозиторий
          git push origin main || echo "No changes to push"
