from model_training import load_and_preprocess_data, train_model, evaluate_model
from data_analysis import exploratory_data_analysis
from code_updater import update_code
from commit_message import generate_commit_message

def main():
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å:
    1. –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    2. –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö (EDA)
    3. –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
    4. –û—Ü–µ–Ω–∫–∞ –º–æ–¥–µ–ª–∏
    5. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
    6. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞
    """
    dataset_id = 1464  # ID –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö OpenML

    print("üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –ø—Ä–µ–¥–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ...")
    X_train, X_test, y_train, y_test = load_and_preprocess_data(dataset_id)

    if X_train is None or y_train is None:
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
        return

    print("üìä –í—ã–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö (EDA)...")
    exploratory_data_analysis(X_train, y_train)  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥—Ä–∞—Ñ–∏–∫–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É

    print("üéØ –û–±—É—á–∞–µ–º –º–æ–¥–µ–ª—å...")
    model = train_model(X_train, y_train)

    if model is None:
        print("‚ùå –û—à–∏–±–∫–∞ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
        return

    print("üìä –û—Ü–µ–Ω–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å...")
    evaluate_model(model, X_test, y_test)

    print("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ —á–µ—Ä–µ–∑ Gemini API...")
    update_code()

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞
    commit_msg = generate_commit_message(changes_summary="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏, –∞–Ω–∞–ª–∏–∑–∞ –∏ –∫–æ–¥–∞")

    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: {commit_msg}")

if __name__ == "__main__":
    main()

